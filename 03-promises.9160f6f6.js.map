{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIEQ,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAqBC,GACnBA,EAAMC,iBACN,MACEC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAEJC,EAAc,CAClBlB,MAAOmB,OAAOL,EAAMM,OACpBL,KAAMI,OAAOJ,EAAKK,OAClBJ,OAAQG,OAAOH,EAAOI,QAGxB,GAAIF,EAAYlB,MAAQ,GAAKkB,EAAYH,KAAO,GAAKG,EAAYG,OAAS,EACxE,OAAOC,EAAA1B,GAAS2B,OAAOC,QAAQ,8BAEjBN,EAAYlB,MAC5B,IAAK,IAAIyB,EAAI,EAAGA,GAAKP,EAAYF,OAAQS,GAAK,EAC5C3B,EAAc2B,EAAGP,EAAYlB,OAC1B0B,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS+B,OAAOC,QACd,uBAAqB7B,QAAiBC,MAAU,IAGnD6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS+B,OAAOH,QACd,sBAAoBzB,QAAeC,MAAU,IAGnDkB,EAAYlB,OAASkB,EAAYH,KACjCJ,EAAMM,cAAca,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst formEl = document.querySelector(`.form`);\n\nformEl.addEventListener(`submit`, startCreate);\n\nfunction startCreate(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  const inputValues = {\n    delay: Number(delay.value),\n    step: Number(step.value),\n    amount: Number(amount.value),\n  };\n\n  if (inputValues.delay < 0 || inputValues.step < 0 || inputValues.amout <= 0) {\n    return Notiflix.Report.failure(`❌Pick integral values only`);\n  }\n  let promDelay = inputValues.delay;\n  for (let i = 1; i <= inputValues.amount; i += 1) {\n    createPromise(i, inputValues.delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    inputValues.delay += inputValues.step;\n    event.currentTarget.reset();\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","inputValues","Number","value","amout","$parcel$interopDefault","Report","failure","i","then","Notify","success","catch","reset"],"version":3,"file":"03-promises.9160f6f6.js.map"}